//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class RealVectorStateSampler : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RealVectorStateSampler(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RealVectorStateSampler obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RealVectorStateSampler() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ompl_wrapPINVOKE.delete_RealVectorStateSampler(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public RealVectorStateSampler(StateSpace space) : this(ompl_wrapPINVOKE.new_RealVectorStateSampler(StateSpace.getCPtr(space)), true) {
  }

  public void sampleUniform(State state) {
    ompl_wrapPINVOKE.RealVectorStateSampler_sampleUniform(swigCPtr, State.getCPtr(state));
  }

  public void sampleUniformNear(State state, State near, double distance) {
    ompl_wrapPINVOKE.RealVectorStateSampler_sampleUniformNear(swigCPtr, State.getCPtr(state), State.getCPtr(near), distance);
  }

  public void sampleGaussian(State state, State mean, double stdDev) {
    ompl_wrapPINVOKE.RealVectorStateSampler_sampleGaussian(swigCPtr, State.getCPtr(state), State.getCPtr(mean), stdDev);
  }

}
